---
- name: Deploy the OpenShift Cluster
  hosts: localhost
  connection: local
  gather_facts: yes
  vars_files:
    - vars.yml
  tasks:

    - name: Check whether the stack exists already
      command: "openstack stack show {{ stack_name }}"
      register: stack_check

    - name: Register stack output
      command: >
        openstack stack output show -f value -c output_value
        {{ stack_name }} ip_address
      register: stack_output_raw

    - set_fact:
        stack_output: "{{ stack_output_raw.stdout|from_json }}"

    - name: Add the bastion to the inventory
      add_host:
        name: "{{ stack_output.bastion.name }}"
        hostname: "{{ stack_output.bastion.address }}"
        groups: bastion,all
        zone: "{{ domain_name }}"
        domain_name: "{{ domain_name }}"
        contact: "{{ contact }}"
        ansible_user: "{{ ssh_user }}"
        ip_addr: "{{ stack_output.bastion.address }}"
        ansible_nodename: "{{ ansible_nodename }}"

    - name: Add the masters to the inventory
      add_host:
        name: "{{ item.name }}"
        hostname: "{{ item.address }}"
        groups: masters,all,openshift
        zone: "{{ domain_name }}"
        domain_name: "{{ domain_name }}"
        contact: "{{ contact }}"
        ansible_user: "{{ ssh_user }}"
        ip_addr: "{{ item.address }}"
        ansible_nodename: "{{ ansible_nodename }}"
      with_items: "{{ stack_output.masters }}"

    - name: Add the infras to the inventory
      add_host:
        name: "{{ item.name }}"
        hostname: "{{ item.address }}"
        groups: infras,all,openshift
        zone: "{{ domain_name }}"
        domain_name: "{{ domain_name }}"
        contact: "{{ contact }}"
        ansible_user: "{{ ssh_user }}"
        ip_addr: "{{ item.address }}"
        ansible_nodename: "{{ ansible_nodename }}"
      with_items: "{{ stack_output.infras }}"

    - name: Add the nodes to the inventory
      add_host:
        name: "{{ item.name }}"
        hostname: "{{ item.address }}"
        groups: nodes,all,openshift
        zone: "{{ domain_name }}"
        domain_name: "{{ domain_name }}"
        contact: "{{ contact }}"
        ansible_user: "{{ ssh_user }}"
        ip_addr: "{{ item.address }}"
        ansible_nodename: "{{ ansible_nodename }}"
      with_items: "{{ stack_output.nodes }}"

    - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      vars:
        ansible_connection: local
      with_items: "{{ groups['all'] }}"

- include: openshift-node-setup.yml
