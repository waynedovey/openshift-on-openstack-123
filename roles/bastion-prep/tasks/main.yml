- name: check if host already registered
  command: subscription-manager list --available --match-installed --matches=*Openshift* --pool-only
  register: subs_result
  failed_when: false
  changed_when: "'This system is not yet registered' in subs_result.stderr"

- name: Register hosts
  command: subscription-manager register --username={{ rhn_username }} --password={{ rhn_password }}
  retries: 5
  delay: 5
  when: subs_result.changed

- name: Check Red Hat subscription
  redhat_subscription:
    state: present
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"
    pool: "{{ rhn_pool }}"
    #force_register: yes
  register: subscribe
  retries: 5
  delay: 5

- debug:
    msg: "{{subscribe}}"

- name: Disable all repos
  shell: |
    subscription-manager repos --disable=*
  retries: 5
  delay: 5
  when: subscribe.changed

- name: Enable correct repos
  command: "subscription-manager repos --enable={{item}}"
  when: subscribe.changed
  retries: 5
  delay: 5
  with_items: "{{repos}}"

- name: Enable bastion specific repos
  command: "subscription-manager repos --enable={{item}}"
  retries: 5
  delay: 5
  with_items: "{{repos_bastion}}"

- name: Ensure that required packages are present on target hosts
  yum:
    name: "{{item}}"
    state: latest
  retries: 5
  delay: 5
  with_items: "{{packages}}"

- name: Install Required Packages
  yum:
    name: "{{item}}"
    state: installed
  with_items: "{{packages}}"

- name: Install required openstack packages for bastion
  yum:
    name: "{{item}}"
    state: installed
    disablerepo: rhel-7-fast-datapath-rpms
    disablerepo: rhel-7-server-ose-{{ openshift_version }}-rpms
  with_items: "{{packages_bastion_openstack}}"

- name: Install required openstack packages for bastion
  yum:
    name: "{{item}}"
    state: installed
    disablerepo: rhel-7-server-openstack-{{ openstack_version }}-tools-rpms
  with_items: "{{packages_bastion_openshift}}"

- name: Copy OpenStack ssh key to bastion
  copy:
    src: "{{ ssh_key_path }}"
    dest: /home/cloud-user/admin.pem
    mode: 0400
    owner: "{{ ssh_user }}"

- name: Copy playbooks to bastion
  copy:
    src: "{{ playbook_dir }}"
    dest: /home/{{ ssh_user }}
    directory_mode: 0755
    mode: 0755
    owner: "{{ ssh_user }}"
    group: "{{ ssh_user }}"
