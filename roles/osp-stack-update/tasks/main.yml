- include_tasks: validate-parameters.yml

- name: Check if {{ stack_name }} stack exists
  command: "openstack stack show {{ stack_name }}"
  register: stack_check

- name: Update heat stack {{ stack_name }}
  stack_update:
    name: "{{ stack_name }}"
    template: "{{ heat_template_path }}"
    parameters:
      domain_name: "{{ domain_name }}"
      external_network: "{{ external_network }}"
      service_subnet_cidr: "{{ service_subnet_cidr }}"
      router_id: "{{ router_id }}"
      ssh_key_name: "{{ ssh_key_name }}"
      dns_forwarders: "{{ dns_forwarders }}"
      image: "{{ image }}"
      bastion_flavor: "{{ bastion_flavor }}"
      master_flavor: "{{ master_flavor }}"
      infra_flavor: "{{ infra_flavor }}"
      node_flavor: "{{ node_flavor }}"

      master_count: "{{ master_count }}"
      infra_count: "{{ infra_count }}"
      node_count: "{{ node_count }}"
      master_server_group_policies: "{{ master_server_group_policies }}"
      infra_server_group_policies: "{{ infra_server_group_policies }}"
      node_server_group_policies: "{{ node_server_group_policies }}"
  register: stack_output
  when: stack_check.rc == 0

- name: Register stack output
  command: >
    openstack stack output show -f value -c output_value
    {{ stack_name }} ip_address
  register: stack_output_raw

- set_fact:
    stack_output: "{{ stack_output_raw.stdout|from_json }}"

#- name: Add the bastion to the inventory
#  add_host:
#    name: "{{ stack_output.bastion.address }}"
#    groups: bastion
#    zone: "{{ domain_name }}"
#    domain_name: "{{ domain_name }}"
#    contact: "{{ contact }}"
#    ansible_user: "{{ ssh_user }}"

- name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
  wait_for:
    port: 22
    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    search_regex: OpenSSH
    delay: 10
  vars:
    ansible_connection: local
